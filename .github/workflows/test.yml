# documentation: https://help.github.com/en/articles/workflow-syntax-for-github-actions
name: build documentation
on: [push, pull_request]
# Declare default permissions as read only.
permissions: read-all
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: checkout
      uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4.1.6

    - name: set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: '3.10'

    - name: Codespell action
      uses: codespell-project/actions-codespell@22ff5a2e4b591290baf82d47c9feadac31c65441 # v1.0
      with:
        check_filenames: true
        # MarkDown files in docs/available_software/detail are skipped because they are auto-generated
        skip: '*.pdf,.git,*.json,./docs/available_software/detail/*.md'
        ignore_words_list: Fram,fram,ND,nd

    # - name: Markdown Linting Action
    #   uses: avto-dev/markdown-lint@v1.2.0
    #   with:
          # rules: '/lint/rules/changelog.js'
          # config: '/lint/config/changelog.yml'
    #     args: '.'


    # Make sure to also test deployment of auto-generated API docs for test suite
    # For that, we need the repo to be available under eessi/test-suite
    - name: checkout test suite
      uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # v3.1.0
      with:
        repository: eessi/test-suite
        # Path is needed, otherwise this will overwrite the checkout action that cloned the docs repo
        path: test-suite
        # Make sure to fetch tags, so we can checkout a particular release
        fetch-tags: True
      # Generate docs for latest release
      run: |
        cd eessi/tests-suite
        # This assumes we stick to a version-tagging scheme vX.Y.Z
        LATEST_VERSION=$(git tag | grep '^v[0-9]\+\.[0-9]\+\.[0-9]\+$' | sort -t. -k 1,1n -k 2,2n -k 3,3n | tail -1)
        # Use the latest release by default
        git checkout $LATEST_VERSION

    - name: install mkdocs + plugins
      run: |
          pip install -r requirements.txt
          pip list | grep mkdocs
          mkdocs --version

    - name: build tutorial
      run: make test
